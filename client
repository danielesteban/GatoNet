os.loadAPI("GatoNet/api")

local modem = "back"

local hosts = {}

api.init(modem)

function clear()
  term.clear()
  term.setCursorPos(1, 1)
end

function panel(title)
  clear()
  print("[GatoNet] "..os.getComputerLabel().." ("..os.getComputerID()..")")
    print("")
  if title then
    print(title)
    print("")
    end
end

function scan()
  hosts = {}
  panel("Scanning the network...")
  local time = 0
  local start = os.clock()
  local hostCount = 0
  while os.clock() - start < 3 do
    networkId, host = rednet.receive("GatoNet", 3)
    if networkId and host then
      local already = false
      for i=1, hostCount do
        if hosts[i][1] == networkId then
          already = true
        end
      end
      if not already then
        table.insert(hosts, {networkId, host})
        hostCount = hostCount + 1
      end
    end
  end
  menu()
end

function menu()
  panel()
  local hostCount = table.getn(hosts)
  for i=1, hostCount do
    print("["..tostring(i).."] "..hosts[i][2].." ("..hosts[i][1]..")")
  end
  print("["..tostring(hostCount + 1).."] Re-scan network")
  print("["..tostring(hostCount + 2).."] Type a hostname")
  local input = tonumber(read())
  if input < 1 or input > hostCount + 2 then
    print("Error: Invalid option")
      sleep(1)
      menu()
    else
      if input == hostCount + 2 then
        typeHost()
      elseif input == hostCount + 1 then
        scan()
      else
        terminal(hosts[input][1])
      end
  end

end

function typeHost()
  panel("Type a hostname:")
  local host = read()
  local networkId = rednet.lookup("GatoNet", host)
  if networkId then
    terminal(networkId)
  else
    print("Error: Couldn't find host")
    sleep(1)
    menu()
  end
end

function terminal(networkId)
  clear()

  local quit = 0
  while quit == 0 do
    local input = read()
    if input == "quit" then
      quit = 1
    else
      rednet.send(networkId, input, "GatoNet")
    end
  end

  scan()
end

scan()
