os.loadAPI("GatoNet/api")

local modem = "left"
local monitor = peripheral.wrap("back")
local hostname = os.getComputerLabel()

local mode = "banner"
local banner = {hostname, "GatoNet ["..os.getComputerID().."]"}
local bannerY = 1
local bannerScale = 4
local clockY = 2
local clockScale = 5
local cronoY = 3
local cronoScale = 4
local textColors = {0x1, 0x2, 0x4, 0x8, 0x10, 0x20, 0x40, 0x80, 0x100, 0x200, 0x400, 0x800, 0x1000, 0x2000, 0x4000}

local lastTick = os.clock()
local lastBroadcast = lastTick

local cronoStatus = "stopped"
local cronoValue = 0

function randomColor()
  return textColors[math.random(table.getn(textColors))]
end

function line(y, color, text)
  local width, height = monitor.getSize()
  local offsetX = math.ceil(width / 2) - math.ceil(string.len(text) / 2) + 1
  if offsetX < 1 then
    offsetX = 1
  end
  monitor.setCursorPos(offsetX, y)
  monitor.setTextColor(color)
  monitor.write(text)
end

math.randomseed(os.clock())

monitor.clear()
monitor.setBackgroundColor(0x8000)
monitor.setTextScale(bannerScale)

api.init(modem)

while true do
  networkId, message = rednet.receive("GatoNet", 0)
  if networkId and message then
    local params = api.parse(message)
    local paramsCount = table.getn(params)
    if paramsCount > 0 then
      if params[1] == "update" then
        api.update("monitor", true)
      else
        mode = params[1]
        if mode == "banner" then
          monitor.setTextScale(bannerScale)
          if paramsCount > 1 then
            banner = {}
            for i=2, paramsCount do
              table.insert(banner, params[i])
            end
          end
        elseif mode == "clock" then
          monitor.setTextScale(clockScale)
        elseif mode == "crono" then
          monitor.setTextScale(cronoScale)
          if params[2] == "pause" then
            cronoStatus = "paused"
          elseif params[2] == "resume" then
            cronoStatus = "running"
          else
            if params[2] == "start" then
              cronoStatus = "running"
            else
              cronoStatus = "stopped"
            end
            cronoValue = 0
          end
        else
          monitor.clear()
        end
      end
    end
  end

  local delta = os.clock() - lastTick

  if mode == "banner" and delta > 0.5 then
    lastTick = os.clock()
    monitor.clear()
    for i=1, table.getn(banner) do
      line(i + bannerY, randomColor(), banner[i])
    end
  end

  if mode == "clock" and delta >= 0.5 then
    lastTick = os.clock()
    monitor.clear()
    line(clockY, randomColor(), "Day "..tostring(os.day()))
    line(clockY + 1, randomColor(), textutils.formatTime(os.time(), false))
  end

  if mode == "crono" and delta >= 0.5 then
    lastTick = os.clock()
    monitor.clear()
    if cronoStatus == "stopped" then
      line(cronoY, randomColor(), "00:00:00")
    else
      if cronoStatus == "running" then
        cronoValue = cronoValue + delta
      end
      local hours = tostring(math.floor(cronoValue / 3600))
      if string.len(hours) < 2 then
        hours = "0"..hours
      end
      local minutes = tostring(math.floor(cronoValue / 60))
      if string.len(minutes) < 2 then
        minutes = "0"..minutes
      end
      local seconds = tostring(math.floor(cronoValue % 60))
      if string.len(seconds) < 2 then
        seconds = "0"..seconds
      end
      line(cronoY, randomColor(), hours..":"..minutes..":"..seconds)
    end
  end

  if os.clock() - lastBroadcast > 3000 then
    lastBroadcast = os.clock()
    rednet.broadcast(hostname, "GatoNet")
  end
end
