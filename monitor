os.loadAPI("GatoNet/api")

local modem = "left"
local monitor = peripheral.wrap("back")

local mode = "banner"
local banner = {os.getComputerLabel(), "GatoNet ["..os.getComputerID().."]"}
local bannerY = 1
local clockY = 2
local textColors = {0x1, 0x2, 0x4, 0x8, 0x10, 0x20, 0x40, 0x80, 0x100, 0x200, 0x400, 0x800, 0x1000, 0x2000, 0x4000}
local textScale = 4

local lastTick = os.clock()

function randomColor()
  return textColors[math.random(table.getn(textColors))]
end

function line(y, color, text)
  local width, height = monitor.getSize()
  local offsetX = math.ceil(width / 2) - math.ceil(string.len(text) / 2) + 1
  if offsetX < 1 then
    offsetX = 1
  end
  monitor.setCursorPos(offsetX, y)
  monitor.setTextColor(color)
  monitor.write(text)
end

math.randomseed(os.clock())

monitor.clear()
monitor.setTextScale(textScale)

api.init(modem)

while true do
  senderId, message = rednet.receive("GatoNet", 0)
  if senderId and message then
    local params = api.parse(message)
    local paramsCount = table.getn(params)
    if paramsCount > 0 then
      if params[1] == "update" then
        api.update("monitor", true)
      elseif params[1] == "off" then
        monitor.clear()
        mode = "off"
      else
        mode = params[1]
        if mode == "banner" and paramsCount > 1 then
          banner = {}
          for i=2, paramsCount do
            table.insert(banner, params[i])
          end
        end
      end
    end
  end

  local delta = os.clock() - lastTick

  if mode == "banner" and delta > 1 then
    lastTick = os.clock()
    monitor.clear()
    for i=1, table.getn(banner) do
      line(i + bannerY, randomColor(), banner[i])
    end
  end

  if mode == "clock" and delta > 1 then
    lastTick = os.clock()
    monitor.clear()
    line(clockY, randomColor(), "Day "..tostring(os.day()))
    line(clockY + 1, randomColor(), textutils.formatTime(os.time(), false))
  end
end
